<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v13.2" name="DevExpress.Utils.v13.2, Version=13.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v13.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMy4yLCBWZXJzaW9uPTEzLjIu
        NS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAEgEAAAC9gEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7BAAAOwQG4kWvtAAABi0lEQVQ4T+WTPUhCURTH3xJNjk1t
        IhkNqe9FRfRtr8LqaRRBad/Q1NAYYZFpQjSZFtTQGL7ArISgwIY+hqippbkhqCkznwZ2/7erUkEfr5q7
        8ONwuef87rkHLsexBY+hHB5hAG5+MAP18EOYEyxYqNJkzlUXvJW6tMtwnpoujiedRbGkUx97mil5eJ4z
        3mDW1P9TPQcX35B2lT4kpnT0cVKLDCmnnjIBgVuIwFddgG1J8xF6MZaXlcMliMRtUp7nefoK8QoU3jJK
        FitjJNi+Q7ZswTfCVpnkcCPSVsgERpH4ahQcDlCcjlKcjOQ4HqZkpxskJCVYcfwz1muErZacYF1UcDlO
        cTXxTma/30sRtn0J6yDJBH0c/LUiCVoURO0UUcc7B6x4t0tdEOq0c9joEEnIqnx3k2oHWUGoU2Tv+98C
        mQ1RlhTIEv0LRO5IYlNiQ1xtqiOr4j0DfySOtZYejq6YtSRgPiL+xjsWb39FLvcMAbEi+x/oSrOAQL0d
        S42ObFTjNWe5oQp7rfkvjSeEADf8ZksAAAAASUVORK5CYIJKAgAAiVBORw0KGgoAAAANSUhEUgAAABAA
        AAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6
        AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAchJREFUOE+N08suA1EYB/C+CvEG3bksbMpjiNB4Ar2I
        NCgWQneNhVsmxKUuqSqaadO4JHWr2KAUCaIy0qGdOWdm+TfnxEwMbVl8OXMy+X7555zzOQA4vpfb6YBZ
        P/9V2v9qvpN13MoqrmT6L8gCnE4nHj8UPBR15IsEl1IJ5xLB+YtaE7IBDEneF5F7I7iSdFy8fuC0UMbJ
        SwlHT+WKkA1ISlkwhFXspohsQebNx89GFd6RMb5/no8NyNJTZLUzJN4OLCiSk5F5fucQa/aLN3w1D9QG
        nGj76OobwDHZQ4amEZUSFsRSeVLX8CVrAIfaDg61beyRONz+IaSVOEQlBrEc45DHaG7t8VVPkNZW0e0b
        RIqsQSQrSKgr6PQOIV6KfAF5A8lXB3Z1AQkqYJsI6PQHsakKiCqziJZmOMDit7p7KwP1LS5saZM8QYxO
        IkrDWFfD6PAEECmHOeAVc/An76oD63oIG1oIqzTEEyyTCaPGsaSMWUDNBCzFkjaKRTqMBRo0aoQnmFeD
        fycw77WuuQ31Le0QaAACCWCO9GNW7bduoaGxzXoDrMc2TN+nraHZZUAuTBMvplQvB+qa2m3NNQETM582
        WyuN8ydNMsK7uI0bxAAAAABJRU5ErkJgggs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>